%! pfm V2.8/17243 generated this postscript file
% A happy programme is one that generates other programmes;
% This was generated by a happy programme!
%these functions are Copyright (c) 2001-2013 by E. Scott Daniels. All Rights Reserved!
/xlate {0 792 translate} def
/newp {showpage xlate} def
 /box { 3 index 3 index moveto 3 index 1 index lineto  1 index 1 index lineto 1 index 3 index lineto  closepath stroke pop pop pop pop } def
 /rightxy { dup stringwidth pop 3 index exch sub 2 index moveto show pop pop } def /showstack {  np 0 eq    { show }  {   0 1 np 1 sub
  { pop  aload pop  dup -1 eq   { pop }  { setrgbcolor }  ifelse  /fs exch def  /ya exch def  exch  findfont fs scalefont setfont
  ya 0 ne { 0 ya rmoveto } if  show  ya 0 ne { 0 ya -1 mul rmoveto } if  } for  } ifelse  } def /just {  /bc exch def  /wid exch def
  /np exch def  np 0 eq  { dup /sw exch stringwidth pop def }  { /sw 0 def  0 1 np 1 sub {  /i exch def  i 5 mul 1 add index /fs exch def
  i 5 mul 4 add index findfont fs scalefont setfont  i 5 mul 3 add index stringwidth pop  /sw exch sw add def  } for  } ifelse  wid sw sub bc div
  /bs exch def  np 0 eq  { bs 0 32 4 index widthshow pop }  { 0 1 np 1 sub {  pop  aload pop  dup -1 eq   { pop }  { setrgbcolor }
  ifelse  /fs exch def  /ya exch def  exch findfont fs scalefont setfont  ya 0 ne { 0 ya rmoveto } if  bs 0 32 3 index widthshow pop
  ya 0 ne { 0 ya -1 mul rmoveto } if  } for  } ifelse } def /cent {   /np exch def   /wid exch def   np 0 eq    { dup /sw exch stringwidth pop def }
   { /sw 0 def  0 1 np 1 sub {   /i exch def   i 5 mul 1 add index /fs exch def  i 5 mul 4 add index findfont fs scalefont setfont 
  i 5 mul 3 add index stringwidth pop  /sw exch sw add def   } for    } ifelse  wid sw sub 2 div 0 rmoveto showstack  } def /right { 
  /np exch def   /wid exch def   /sw 0 def   0 1 np 1 sub {   /i exch def    i 5 mul 1 add /fs exch def   i 5 mul 4 add index findfont fs scalefont setfont
   i 5 mul 3 add index stringwidth pop    /sw exch sw add def   } for   currentpoint exch wid add sw sub exch moveto showstack  } def
 /splat { /np exch def showstack } def xlate
90 -63 moveto
(Helvetica-bold) (GOBBLER) 0 16 [ 0.00 0.00 0.00  ] 
1 splat
90 -88 moveto
(Helvetica) (Gobbler is a DPDK application which provides a simple packet receipt counting funciton with) 0 10 [ -1 ] 
 1 414 13 just
90 -100 moveto
(Helvetica) (optional forwarding or return to sender modes. Gobbler opens one or more devices for input) 0 10 [ -1 ] 
 1 414 14 just
90 -112 moveto
(Helvetica) (\(Rx\) and either duplicates the Rx devices for Tx, or opens one or more devices for) 0 10 [ -1 ] 
 1 414 15 just
90 -124 moveto
(Helvetica) (transmission \(Tx\). Pakcets received are counted and dropped, or forwarded onto one of the) 0 10 [ -1 ] 
 1 414 13 just
90 -136 moveto
(Helvetica) (Tx devices.) 0 10 [ -1 ] 
1 splat
90 -188 moveto
(Helvetica-bold) (Requirements) 0 14 [ -1 ] 
1 splat
90 -212 moveto
(Helvetica) (Version 17.08 of DPDK should be used to build gobbler.) 0 10 [ -1 ] 
1 splat
90 -252 moveto
(Helvetica-bold) (Building) 0 14 [ -1 ] 
1 splat
90 -276 moveto
(Helvetica) (Gobbler is built in the same manner as any other DPDK appliction; using gmake. Execute the) 0 10 [ -1 ] 
 1 414 15 just
90 -288 moveto
(Helvetica) (following command in this directory which will generate ./build/app/gobbler as a statically) 0 10 [ -1 ] 
 1 414 11 just
90 -300 moveto
(Helvetica) (linked binary.) 0 10 [ -1 ] 
1 splat
90 -318 moveto
(Helvetica) (   make clean; make) 0 10 [ -1 ] 
1 splat
gsave 0 setlinewidth 90 -322 moveto 536 -322 lineto stroke grestore
90 -338 moveto
(Helvetica) (Formatted on 21 July 2017 using pfm V2.8/17243) 0 10 [ -1 ] 
1 splat
(Helvetica) findfont 10 scalefont setfont
277 -737   (-1-) rightxy
newp
